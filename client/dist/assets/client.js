eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"client/adapters/application\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.RESTAdapter.extend({\n      namespace: \'api\'\n    });\n  });//# sourceURL=client/adapters/application.js");

;eval("define(\"client/adapters/checklist\", \n  [\"ember\",\"client/adapters/application\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ApplicationAdapter = __dependency2__[\"default\"];\n\n    var get = Ember.get;\n\n    function buildChecklistCreateUrl (record) {\n      var userId = get(record, \'userId\');\n      return [\'/api/users\', userId, \'checklists\'].join(\'/\');\n    }\n\n    __exports__[\"default\"] = ApplicationAdapter.extend({\n      createRecord: function(store, type, record) {\n        var data = {};\n        var serializer = store.serializerFor(type.typeKey);\n\n        serializer.serializeIntoHash(data, type, record, { includeId: true });\n\n        return this.ajax(buildChecklistCreateUrl(record), \"POST\", { data: data });\n      }\n    });\n  });//# sourceURL=client/adapters/checklist.js");

;eval("define(\"client/adapters/list-item\", \n  [\"ember\",\"client/adapters/application\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ApplicationAdapter = __dependency2__[\"default\"];\n\n    var get = Ember.get;\n\n    function buildListItemUrl (record) {\n      var checklistId = record.get(\'checklistId\');\n      var id = get(record, \'id\') || \'\';\n      return [\'/api/checklists\', checklistId, \'list-items\', id].join(\'/\');\n    }\n\n    __exports__[\"default\"] = ApplicationAdapter.extend({\n\n      createRecord: function(store, type, record) {\n        var data = {};\n        var serializer = store.serializerFor(type.typeKey);\n\n        serializer.serializeIntoHash(data, type, record, { includeId: true });\n\n        return this.ajax(buildListItemUrl(record), \"POST\", { data: data });\n      }\n\n    , updateRecord: function(store, type, record) {\n        var data = {};\n        var serializer = store.serializerFor(type.typeKey);\n\n        serializer.serializeIntoHash(data, type, record);\n\n        return this.ajax(buildListItemUrl(record), \"PUT\", { data: data });\n      }\n\n    , deleteRecord: function(store, type, record) {\n        return this.ajax(buildListItemUrl(record), \"DELETE\");\n      }\n    });\n  });//# sourceURL=client/adapters/list-item.js");

;eval("define(\"client/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: \'client\', // TODO: loaded via config\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, \'client\');\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=client/app.js");

;eval("define(\"client/controllers/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n      needs: [\'index\']\n\n    , setCurrentUser: function (user) {\n        this.session.set(\'user\', user);\n      }\n\n    , actions: {\n        signout: function () {\n\n          Ember.$.ajax({\n            type: \'post\'\n          , url:\'/api/sessions/\'+this.session.get(\'user.id\')\n          , data: { _method: \'DELETE\' }\n          , dataType: \'json\'\n          });\n\n          this.session.set(\'user\', null);\n          this.transitionToRoute(\'index\');\n        }\n      }\n\n    });\n  });//# sourceURL=client/controllers/application.js");

;eval("define(\"client/controllers/checklists/list-item\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n      showEditIcon: function () {\n        return !this.get(\'isEditing\') && this.get(\'parentController.canEdit\');\n      }.property(\'isEditing\')\n\n    , actions: {\n        save: function () {\n          if (!this.get(\'model.isDirty\')) return;\n          this.get(\'model\').save();\n        }\n\n      , edit: function () {\n          this.set(\'isEditing\', true);\n        }\n\n      , doneEditing: function () {\n          this.set(\'isEditing\', false);\n          this.send(\'save\');\n        }\n\n      , delete_: function () {\n          this.get(\'target\').send(\'deleteItem\', this.get(\'model\'));\n        }\n\n      , move: function (dir) {\n          this.get(\'target\').send(\'move\', dir, this.get(\'model\'));\n        }\n      }\n\n    });\n  });//# sourceURL=client/controllers/checklists/list-item.js");

;eval("define(\"client/controllers/checklists/list-items\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n\n      itemController: \'checklists/list-item\'\n\n    , canEditBinding: Ember.Binding.oneWay(\'parentController.canEdit\')\n\n    , sortProperties: [\'index\']\n\n    , checklistBinding: Ember.Binding.oneWay(\'parentController.model\')\n\n    , selectNextItem: function () {\n        Ember.run.once(this, function () {\n          this.invoke(\'set\', \'isActive\', false);\n          var next = this.find(function (i) {\n            return !i.get(\'isCompleted\');\n          });\n\n          if (next) next.set(\'isActive\', true);\n        });\n      }.observes(\'@each.isCompleted\')\n\n    , actions: {\n\n        delete_: function () {\n          this.get(\'parentController\').send(\'delete_\');\n        }\n\n      , deleteItem: function (model) {\n          this.get(\'content\').removeObject(model);\n          model.destroyRecord();\n          var models = this.get(\'arrangedContent\');\n          for (var i=0, len=models.length; i < len; i++) {\n            models[i].set(\'index\', i);\n          }\n        }\n\n      , reorder: function (listItemsIds) {\n          var url = \'/api/checklists/\'+this.get(\'checklist.id\')+\'/reorder\';\n          Ember.$.ajax({\n            type: \'POST\'\n          , url: url\n          , data: {listItemsIds: listItemsIds, _method: \'PUT\'}\n          , dataType: \'json\'\n          });\n        }\n      }\n\n    });\n  });//# sourceURL=client/controllers/checklists/list-items.js");

;eval("define(\"client/controllers/checklists/new\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n\n      canEdit: true\n\n    , showDescription: true\n\n    , userBinding: \'session.user\'\n\n    , createRecord: function () {\n        var attrs = this.getProperties(\'title\', \'description\');\n        attrs.userId = this.get(\'user.id\');\n        return this.store.createRecord(\'checklist\', attrs);\n      }\n\n    , onSuccess: function (checklist) {\n        var self = this;\n        this.set(\'isLoading\', false);\n        this.get(\'user.checklists\').then(function (checklists) {\n          checklists.pushObject(checklist);\n          self.setProperties({title: null, description: null});\n          self.transitionToRoute(\'checklists.show\', checklist);\n        });\n      }\n\n    , validModel: function () {\n        return !!this.get(\'title\');\n      }.property(\'title\')\n\n    , onError: function (res) {\n        console.log(\'Error\', res);\n      }\n\n    , actions: {\n        childViewDidFocusOut: function () {}\n\n      , create: function () {\n          if (this.get(\'title\')) {\n            this.set(\'isLoading\', true);\n            this.createRecord().save().then(this.onSuccess.bind(this), this.onError.bind(this));\n          }\n        }\n\n      }\n    });\n  });//# sourceURL=client/controllers/checklists/new.js");

;eval("define(\"client/controllers/checklists/show\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n      canEdit: function () {\n        return this.session.isCurrentUser(this.get(\'user\'));\n      }.property(\'userId\')\n\n    , showDescription: function () {\n        return this.get(\'description\') || this.get(\'canEdit\');\n      }.property(\'description\', \'canEdit\')\n\n    , totalCount: function () {\n        return this.get(\'listItems.length\');\n      }.property(\'listItems.@each.isCompleted\')\n\n    , countSummary: function () {\n        var len = this.get(\'listItems.length\');\n        var word = len === 1 ? \'step\' : \'steps\';\n        if (len) return len+\' \'+word;\n      }.property(\'listItems.length\')\n\n    , uncompletedCount: function () {\n        return this.get(\'listItems\').filter(function (i) {\n          return !i.get(\'isCompleted\');\n        }).get(\'length\');\n      }.property(\'listItems.@each.isCompleted\')\n\n    , completedCount: function () {\n        return this.get(\'listItems\').filter(function (i) {\n          return !!i.get(\'isCompleted\');\n        }).get(\'length\');\n      }.property(\'listItems.@each.isCompleted\')\n\n    , isCompleted: Ember.computed.equal(\'uncompletedCount\', 0).property(\'listItems.@each.isCompleted\')\n\n    , isInProgress: Ember.computed.gt(\'completedCount\', 0).property(\'listItems.@each.isCompleted\')\n\n    , isClearable: function () {\n        return this.get(\'isInProgress\') && !this.get(\'isEditing\');\n      }.property(\'isInProgress\', \'isEditing\')\n\n    , isEditable: function () {\n        return this.session.isCurrentUser(this.get(\'userId\'));\n      }.property()\n\n    , statusMessage: function () {\n        var status = this.getProperties(\n          \'completedCount\'\n        , \'uncompletedCount\'\n        , \'isCompleted\'\n        , \'isInProgress\'\n        , \'totalCount\');\n\n        if (status.isCompleted) {\n          return \'All \'+status.completedCount+\' items completed!\';\n        } else if (!status.isInProgress) {\n          return status.uncompletedCount+\' items\';\n        } else {\n          return +status.completedCount+\' of \'+status.totalCount + \' complete\';\n        }\n      }.property(\'listItems.@each.isCompleted\')\n\n    , updateUrl: function () {\n        var pathname = \'/\'+[this.get(\'username\'), this.get(\'slug\')].join(\'/\');\n        var windowPathname = window.location.pathname;\n        var title = this.get(\'title\');\n        if (windowPathname !== pathname) {\n          Ember.run.once(function(){\n            window.history.replaceState( {} , title, pathname);\n          });\n        }\n      }.observes(\'slug\')\n\n    , actions: {\n        clear: function () {\n          this.get(\'listItems\').invoke(\'set\', \'isCompleted\', false);\n        }\n\n      , save: function () {\n          this.get(\'model\').save();\n        }\n\n      , toggleEdit: function () {\n          this.toggleProperty(\'isEditing\');\n        }\n\n      , childViewDidFocusOut: function () {\n          if (this.get(\'model.isDirty\')) this.send(\'save\');\n        }\n\n      , addItem: function () {\n          var checklistId = this.get(\'id\');\n          var attrs = {checklistId: checklistId, index: this.get(\'listItems.length\')};\n          var listItem = this.store.createRecord(\'listItem\', attrs);\n          this.get(\'model.listItems\').pushObject(listItem);\n        }\n\n      }\n\n    });\n  });//# sourceURL=client/controllers/checklists/show.js");

;eval("define(\"client/controllers/foyer\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n    });\n  });//# sourceURL=client/controllers/foyer.js");

;eval("define(\"client/controllers/header\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n\n      currentUserBinding: \'session.user\'\n\n    });\n  });//# sourceURL=client/controllers/header.js");

;eval("define(\"client/controllers/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n      isCompleted: true\n    });\n  });//# sourceURL=client/controllers/index.js");

;eval("define(\"client/controllers/users/show\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n      isCurrentUserProfile: function () {\n        return this.session.isCurrentUser(this.get(\'id\'));\n      }.property(\'userId\')\n\n    });\n  });//# sourceURL=client/controllers/users/show.js");

;eval("define(\"client/helpers/autolink-text\", \n  [\"ember\",\"client/lib/autolink\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var autolink = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(value, object) {\n      if (!value) return \'\';\n      return new Ember.Handlebars.SafeString(autolink(value, object.hash));\n    });\n  });//# sourceURL=client/helpers/autolink-text.js");

;eval("define(\"client/lib/autolink\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    // Adpated form https://github.com/bryanwoods/autolink-js/blob/master/autolink.js\n\n    var autoLink, __slice = [].slice;\n\n    autoLink = function() {\n      var linkAttributes, option, options, pattern, v;\n      options = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      pattern = /(^|\\s)((?:https?|ftp):\\/\\/[\\-A-Z0-9+\\u0026\\u2019@#\\/%?=()~_|!:,.;]*[\\-A-Z0-9+\\u0026@#\\/%=~()_|])/gi;\n      if (!options.length) {\n        return this.replace(pattern, \"$1<a href=\'$2\'>$2</a>\");\n      }\n      option = options[0];\n      linkAttributes = ((function() {\n        var _results;\n        _results = [];\n        for (var k in option) {\n          v = option[k];\n          if (k !== \'callback\') {\n            _results.push(\" \" + k + \"=\'\" + v + \"\'\");\n          }\n        }\n        return _results;\n      })()).join(\'\');\n      return this.replace(pattern, function(match, space, url) {\n        var link;\n        link = (typeof option.callback === \"function\" ? option.callback(url) : void 0) || (\"<a href=\'\" + url + \"\'\" + linkAttributes + \">\" + url + \"</a>\");\n        return \"\" + space + link;\n      });\n    };\n\n\n    __exports__[\"default\"] = function () {\n      var args = __slice.call(arguments, 0);\n      var string = args.shift();\n      return autoLink.apply(string, args);\n    }\n  });//# sourceURL=client/lib/autolink.js");

;eval("define(\"client/helpers/markdown-text\", \n  [\"ember\",\"client/lib/markdown\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var markdown = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Handlebars.makeBoundHelper(function(value) {\n      if (!value) return \'\';\n      return new Ember.Handlebars.SafeString(markdown(value));\n    });\n  });//# sourceURL=client/helpers/markdown-text.js");

;eval("define(\"client/lib/markdown\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var renderer = new marked.Renderer();\n\n    renderer.link = function(href, title, text) {\n      return \'<a target=\"_blank\" href=\"\'+href+\'\">\'+text+\'</a>\';\n    };\n\n    marked.setOptions({\n      highlight: function (code, lang) {\n       if (!lang) return hljs.highlightAuto(code).value;\n       return hljs.highlight(lang, code).value;\n      }\n    , renderer: renderer\n    , smartLists: true\n    , smartypants: true\n    , tables: true\n    });\n\n    __exports__[\"default\"] = marked;\n  });//# sourceURL=client/lib/markdown.js");

;eval("define(\"client/initializers/session\", \n  [\"client/services/session\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Session = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = {\n      name: \'session\',\n\n      initialize: function(container, app) {\n        app.register(\'session:current\', Session, {singleton: true});\n        app.inject(\'controller\', \'session\', \'session:current\');\n        app.inject(\'route\', \'session\', \'session:current\');\n      }\n    };\n  });//# sourceURL=client/initializers/session.js");

;eval("define(\"client/services/session\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Object.extend({\n      isCurrentUser: function (userId) {\n        if (userId && \'string\' !== typeof userId) userId = userId.get(\'id\');\n        return userId && this.get(\'user.id\') === userId;\n      }\n\n    , login: function (user) {\n        this.set(\'user\', user);\n      }\n    });\n  });//# sourceURL=client/services/session.js");

;eval("define(\"client/mixins/autofocusable\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Mixin.create({\n      becomeFocused: function() {\n        var $el = this.$();\n        if (this.get(\'focusOnInsert\')) $el.focus();\n        $el.val($el.val());\n      }.on(\'didInsertElement\')\n    });\n  });//# sourceURL=client/mixins/autofocusable.js");

;eval("define(\"client/mixins/editable-field\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Mixin.create({\n      notifyParentOnFocusOut: function () {\n        this.get(\'parentView\').send(\'childViewDidFocusOut\', this);\n      }.on(\'focusOut\')\n    });\n  });//# sourceURL=client/mixins/editable-field.js");

;eval("define(\"client/mixins/sortable\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Mixin.create({\n\n      setupSortable: function () {\n        this.$().sortable({\n          placeholder: \'checklist-list-item-placeholder\'\n        , handle: \'.sort-handle\'\n        , update: this.onSortUpdate.bind(this)\n        , scroll: false\n        , start: function (event, ui) { ui.placeholder.height(ui.item.height()); }\n        });\n      }.on(\'didInsertElement\')\n\n    , destroySortable: function () {\n        this.$().sortable(\'destroy\');\n      }.on(\'willDestroyElement\')\n\n    });\n  });//# sourceURL=client/mixins/sortable.js");

;eval("define(\"client/models/checklist\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    var attr = DS.attr;\n\n    __exports__[\"default\"] = DS.Model.extend({\n      title: attr(\'string\')\n    , slug: attr(\'string\')\n    , listItems: DS.hasMany(\'listItem\', {async:true})\n    , userId: attr(\'string\')\n    , username: attr(\'string\')\n    , description: attr(\'string\')\n    , user: DS.belongsTo(\'user\')\n    });\n  });//# sourceURL=client/models/checklist.js");

;eval("define(\"client/models/list_item\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n    var attr = DS.attr;\n\n    __exports__[\"default\"] = DS.Model.extend({\n      description: attr(\'string\')\n    , checklistId: attr(\'string\')\n    , checklist: DS.belongsTo(\'checklist\', {async:true})\n    , index: attr(\'number\')\n    , isCompleted: function (key, value) {\n        var lsKey = \'ListItem:\'+this.get(\'id\')+\':isCompleted\';\n        if (window.localStorage) {\n          if (arguments.length > 1) window.localStorage.setItem(lsKey, value);\n          return window.localStorage.getItem(lsKey) === \'true\';\n        } else {\n          if (arguments.length > 1) this.set(key, value);\n          return this.get(key) === \'true\';\n        }\n      }.property()\n    });\n  });//# sourceURL=client/models/list_item.js");

;eval("define(\"client/models/user\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n    var attr = DS.attr;\n\n    __exports__[\"default\"] = DS.Model.extend({\n      username: attr(\'string\')\n    , profileImageUrl: attr(\'string\')\n    , checklists: DS.hasMany(\'checklist\', {async: true})\n    });\n  });//# sourceURL=client/models/user.js");

;eval("define(\"client/router\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: \'history\'\n    });\n\n    Router.map(function() {\n      this.route(\'index\', {path: \'/\'});\n      this.route(\'users.show\', {path: \'/:username\'});\n      this.route(\'checklists.show\', {path: \'/:username/:slug\'});\n\n      this.route(\'checklists.new\', {path: \'/list/new\'});\n\n      this.route(\'signout\');\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=client/router.js");

;eval("define(\"client/routes/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n      activate: function () {\n        var currentUser = Ember.ENV.currentUser;\n        if (currentUser) {\n          currentUser = this.store.push(\'user\', currentUser);\n          this.session.login(currentUser);\n        }\n      }\n\n    });\n  });//# sourceURL=client/routes/application.js");

;eval("define(\"client/routes/checklists/show\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      model: function (params) {\n        return this.store.find(\'checklist\', params.slug);\n      }\n\n    , afterModel: function (model) {\n        document.title = [model.get(\'title\'), model.get(\'username\')].join(\' | \');\n      }\n\n    , serialize: function(model) {\n        return model.getProperties(\'username\', \'slug\');\n      }\n\n    , actions: {\n\n        delete_: function () {\n          if (!window.confirm(\'Are you sure?\')) return;\n          var self = this;\n          var model = this.get(\'controller.model\');\n\n          model.destroyRecord().then(function() {\n            var checklists = self.session.get(\'user.checklists\');\n            checklists.removeObject(model);\n            Ember.run.next(null, function() {\n              self.transitionTo(\'users.show\', self.session.get(\'user\'));\n            });\n          });\n        }\n      }\n\n    });\n  });//# sourceURL=client/routes/checklists/show.js");

;eval("define(\"client/routes/checklists_new\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      renderTemplate: function (controller) {\n        this._super.apply(this, arguments);\n        Ember.run.scheduleOnce(\'afterRender\', controller, function () {\n          this.set(\'isEditingTitle\', true);\n        });\n      }\n\n    , afterModel: function () {\n        var user = this.session.get(\'user\');\n        document.title = [\'Create a new Checklist\', user.get(\'username\')].join(\' | \');\n      }\n\n    });\n  });//# sourceURL=client/routes/checklists_new.js");

;eval("define(\"client/routes/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var EXAMPLE_LIST_ITEMS = [\n      { index: 0, description: \'Hello world of checklists _Edit me_\' }\n    , { index: 1, description: \'### There\\`s markdown!\\n```\\nvar foo = \"bar\"\\n```\' }\n    ];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n      afterModel: function () {\n        document.title = [\'Check\'].join(\' | \');\n      }\n\n    , setupController: function (controller) {\n        controller.setProperties({\n          listItems: EXAMPLE_LIST_ITEMS\n        , canEdit: true\n        });\n      }\n\n    , renderTemplate: function () {\n        var user = this.session.get(\'user\');\n        if (!user) return this._super.apply(this, arguments);\n\n        var controller = this.controllerFor(\'users/show\');\n        controller.set(\'model\', user);\n        this.render(\'users/show\', {controller: controller});\n      }\n\n    });\n  });//# sourceURL=client/routes/index.js");

;eval("define(\"client/routes/signout\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n      beforeModel: function () {\n        this.transitionTo(\'index\');\n      }\n    });\n  });//# sourceURL=client/routes/signout.js");

;eval("define(\"client/routes/users/show\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n      model: function (params) {\n        return this.store.find(\'user\', params.username);\n      }\n\n    , afterModel: function (model) {\n        document.title = [model.get(\'username\'), \'Check\'].join(\' | \');\n      }\n\n    , serialize: function (user) {\n        return user.getProperties(\'username\');\n      }\n\n    });\n  });//# sourceURL=client/routes/users/show.js");

;eval("define(\"client/serializers/checklist\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.RESTSerializer.extend({\n      extractArray: function(store, type, payload, id, requestType) {\n        var checklists = payload.checklists;\n        var listItems = [];\n\n        checklists.forEach(function(checklist) {\n          if(checklist && checklist.listItems) {\n            var lis = checklist.listItems;\n            listItems = listItems.concat(lis);\n            checklist.listItems = lis.map(function (li) { return li.id; });\n            //checklist.user = checklist.userId;\n          }\n        });\n\n        payload = {\n          listItems: listItems\n        , checklists: checklists\n        };\n\n        return this._super(store, type, payload, id, requestType);\n      }\n\n    , extractSingle: function(store, type, payload, id, requestType) {\n        var listItems, listItemIds;\n        if (payload.checklist) {\n          listItems = payload.checklist.listItems;\n          listItemIds = listItems.mapProperty(\'id\');\n\n          payload.listItems = listItems;\n          payload.checklist.listItems = listItemIds;\n          payload.checklist.user = payload.checklist.userId;\n        }\n\n        return this._super(store, type, payload, id, requestType);\n      }\n    });\n  });//# sourceURL=client/serializers/checklist.js");

;eval("define(\"client/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"header\", options) : helperMissing.call(depth0, \"render\", \"header\", options))));\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=client/templates/application.js");

;eval("define(\"client/templates/checklists/checklist-header\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n        <img \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'src\': (\"user.profileImageUrl\")\n      },hashTypes:{\'src\': \"STRING\"},hashContexts:{\'src\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'alt\': (\"user.username\")\n      },hashTypes:{\'alt\': \"STRING\"},hashContexts:{\'alt\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" />\\n      \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n            \");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"&nbsp;\\n          \");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n            <span class=\'add-description-prompt\'>Add a Title...</span>\\n          \");\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n            \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"text-field\", {hash:{\n        \'valueBinding\': (\"title\"),\n        \'placeholder\': (\"List title\"),\n        \'property\': (\"title\"),\n        \'focusOnInsert\': (true)\n      },hashTypes:{\'valueBinding\': \"STRING\",\'placeholder\': \"STRING\",\'property\': \"STRING\",\'focusOnInsert\': \"BOOLEAN\"},hashContexts:{\'valueBinding\': depth0,\'placeholder\': depth0,\'property\': depth0,\'focusOnInsert\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n          \");\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n            \");\n      stack1 = helpers._triageMustache.call(depth0, \"user.username\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n          \");\n      return buffer;\n      }\n\n    function program11(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n            &middot; \");\n      stack1 = helpers._triageMustache.call(depth0, \"countSummary\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n          \");\n      return buffer;\n      }\n\n    function program13(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n      \");\n      stack1 = helpers.view.call(depth0, \"checklists/description\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:[\"STRING\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n    function program14(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        \");\n      stack1 = helpers[\'if\'].call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(17, program17, data),fn:self.program(15, program15, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n        \");\n      stack1 = helpers[\'if\'].call(depth0, \"isEditingDescription\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(19, program19, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      \");\n      return buffer;\n      }\n    function program15(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n          \");\n      data.buffer.push(escapeExpression((helper = helpers[\'autolink-text\'] || (depth0 && depth0[\'autolink-text\']),options={hash:{\n        \'target\': (\"_blank\")\n      },hashTypes:{\'target\': \"STRING\"},hashContexts:{\'target\': depth0},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"description\", options) : helperMissing.call(depth0, \"autolink-text\", \"description\", options))));\n      data.buffer.push(\"&nbsp;\\n        \");\n      return buffer;\n      }\n\n    function program17(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n          <span class=\'add-description-prompt\'>Add a description...</span>\\n        \");\n      }\n\n    function program19(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n          \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"textarea\", {hash:{\n        \'valueBinding\': (\"description\"),\n        \'property\': (\"description\"),\n        \'focusOnInsert\': (true)\n      },hashTypes:{\'valueBinding\': \"STRING\",\'property\': \"STRING\",\'focusOnInsert\': \"BOOLEAN\"},hashContexts:{\'valueBinding\': depth0,\'property\': depth0,\'focusOnInsert\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<header class=\'checklist-header\'>\\n  <div class=\'content-width\'>\\n    <div class=\'media\'>\\n      \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"avatar-large media-left\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"users.show\", \"user\", options) : helperMissing.call(depth0, \"link-to\", \"users.show\", \"user\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n      <div class=\'media-body\'>\\n        <h1 class=\'checklists-show-title editable-field\' \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"edit\", \"title\", {hash:{\n        \'target\': (\"view\")\n      },hashTypes:{\'target\': \"ID\"},hashContexts:{\'target\': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"STRING\"],data:data})));\n      data.buffer.push(\">\\n          \");\n      stack1 = helpers[\'if\'].call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n          \");\n      stack1 = helpers[\'if\'].call(depth0, \"isEditingTitle\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        </h1>\\n        <div class=\'checklist-meta subtitle\'>\\n          by\\n          \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"users.show\", \"user\", options) : helperMissing.call(depth0, \"link-to\", \"users.show\", \"user\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n          \");\n      stack1 = helpers[\'if\'].call(depth0, \"countSummary\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(11, program11, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        </div>\\n      </div>\\n    </div>\\n\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"showDescription\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(13, program13, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n  </div>\\n</header>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=client/templates/checklists/checklist-header.js");

;eval("define(\"client/templates/checklists/list-item\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"showEditIcon\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"isEditing\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<div class=\'md-container\'>\\n  <label class=\'checkbox-container\'>\\n    \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'name\': (\"isCompleted\"),\n        \'checked\': (\"isCompleted\")\n      },hashTypes:{\'type\': \"STRING\",\'name\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'name\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n  </label>\\n\\n  <div class=\'md\'>\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"description\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </div>\\n  \");\n      stack1 = helpers[\'if\'].call(depth0, \"showEditIcon\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(10, program10, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n<div class=\'sort-handle-container\'>\\n  <a href=\'#\' class=\'sort-handle\'>\\n    <div class=\'bar\'></div>\\n    <div class=\'bar\'></div>\\n    <div class=\'bar\'></div>\\n    <div class=\'bar\'></div>\\n  </a>\\n</div>\\n\");\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n  <div \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"doneEditing\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\'blanket\'></div>\\n  <div class=\'checklist-list-item-editor\'>\\n    <div class=\'textarea-container\'>\\n      \");\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"textarea\", {hash:{\n        \'valueBinding\': (\"description\")\n      },hashTypes:{\'valueBinding\': \"STRING\"},hashContexts:{\'valueBinding\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n    </div>\\n    <div class=\'controls\'>\\n      <a tabindex=\'1\' class=\'button-danger left control-left\' \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"delete\", {hash:{\n        \'target\': (\"view\")\n      },hashTypes:{\'target\': \"STRING\"},hashContexts:{\'target\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Delete</a>\\n      <a tabindex=\'0\' class=\'button right control-right\' \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"doneEditing\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Done</a>\\n    </div>\\n  </div>\\n\");\n      return buffer;\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n      \");\n      data.buffer.push(escapeExpression((helper = helpers[\'markdown-text\'] || (depth0 && depth0[\'markdown-text\']),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"description\", options) : helperMissing.call(depth0, \"markdown-text\", \"description\", options))));\n      data.buffer.push(\"\\n    \");\n      return buffer;\n      }\n\n    function program8(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n      &nbsp;\\n    \");\n      }\n\n    function program10(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n    <a href=\'#\' \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"edit\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" class=\'button-edit\'>&#9998;</a>\\n  \");\n      return buffer;\n      }\n\n      stack1 = helpers[\'with\'].call(depth0, \"view.content\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=client/templates/checklists/list-item.js");

;eval("define(\"client/templates/checklists/new\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"checklists/header\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n\\n<a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"create\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" href=\'#\' \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":button validModel::is-disabled\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">Create Checklist</a>\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=client/templates/checklists/new.js");

;eval("define(\"client/templates/checklists/show\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n<div class=\'content-width\'>\\n  <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"addItem\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" href=\'#\' class=\'checklist-list-item checklist-add-item-row block action-dormant\'>\\n    <span class=\'checkbox-container\'>&#10010;</span>\\n    Add Item...\\n  </a>\\n\\n  <div class=\'checklist-footer\'>\\n    <a \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"delete_\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" href=\'#\' class=\'block right action-dormant-danger\'>\\n      Delete List\\n    </a>\\n  </div>\\n</div>\\n\");\n      return buffer;\n      }\n\n      data.buffer.push(escapeExpression(helpers.view.call(depth0, \"checklists/header\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\"\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"checklists/list-items\", \"listItems\", options) : helperMissing.call(depth0, \"render\", \"checklists/list-items\", \"listItems\", options))));\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers[\'if\'].call(depth0, \"canEdit\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n<div class=\'checklist-status-bar\'>\\n  <div class=\'content-width\'>\\n    <span class=\'checklist-status-message\'>\");\n      stack1 = helpers._triageMustache.call(depth0, \"statusMessage\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n    <a href=\'#\' class=\'button right\' \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"clear\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">clear</a>\\n  </div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=client/templates/checklists/show.js");

;eval("define(\"client/templates/header\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n\\n    \");\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"nav-button\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"checklists.new\", options) : helperMissing.call(depth0, \"link-to\", \"checklists.new\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n        \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"nav-button\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"users.show\", \"currentUser\", options) : helperMissing.call(depth0, \"link-to\", \"users.show\", \"currentUser\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      \");\n      return buffer;\n      }\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n          + New Checklist\\n        \");\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n          <img \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'src\': (\"currentUser.profileImageUrl\")\n      },hashTypes:{\'src\': \"STRING\"},hashContexts:{\'src\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'alt\': (\"currentUser.username\")\n      },hashTypes:{\'alt\': \"STRING\"},hashContexts:{\'alt\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" class=\'avatar-small\' />\\n          \");\n      stack1 = helpers._triageMustache.call(depth0, \"currentUser.username\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      return buffer;\n      }\n\n    function program8(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        <a class=\'button-text\' href=\'/auth/github\'>Login with GitHub</a>\\n      \");\n      }\n\n      data.buffer.push(\"<header class=\'header-bar\'>\\n  <div class=\'content-width\'>\\n    \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"left header-logo\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"index\", options) : helperMissing.call(depth0, \"link-to\", \"index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n    <nav class=\'left\'>\\n    </nav>\\n\\n    <nav class=\'right\'>\\n      \");\n      stack1 = helpers[\'if\'].call(depth0, \"currentUser\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </nav>\\n  </div>\\n</header>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=client/templates/header.js");

;eval("define(\"client/templates/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n      data.buffer.push(\"<div class=\'foyer-hero\'>\\n\\n  <div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":hero-heading :center isCompleted\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n    <label class=\'checkbox-container\'>\\n      \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'name\': (\"isCompleted\"),\n        \'checked\': (\"isCompleted\")\n      },hashTypes:{\'type\': \"STRING\",\'name\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'name\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n    </label>\\n    <h1 class=\'hero-title\'>\\n      Just Checklists.\\n    </h1>\\n    <p class=\'hero-description center\'>\\n      Create &amp; manage your checkists in one place.\\n    </p>\\n\\n    <div class=\'foyer-cta\'>\\n      <a href=\'/auth/github\' class=\'button-signin\'>\\n        Sign in with GitHub\\n      </a>\\n      <p class=\'foyer-cta-or\'>or</p>\\n      <div class=\'foyer-cta-try\'>\\n        <p>\\n          Try an exmaple\\n        </p>\\n        &#11015;\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n\\n</div>\\n\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers.render || (depth0 && depth0.render),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"checklists/list-items\", \"listItems\", options) : helperMissing.call(depth0, \"render\", \"checklists/list-items\", \"listItems\", options))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=client/templates/index.js");

;eval("define(\"client/templates/users/show\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n        <li>\\n          \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"checklist-item\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data},helper ? helper.call(depth0, \"checklists.show\", \"checklist\", options) : helperMissing.call(depth0, \"link-to\", \"checklists.show\", \"checklist\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        </li>\\n      \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n            <h2 class=\'checklist-item-title\'>\");\n      stack1 = helpers._triageMustache.call(depth0, \"checklist.title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h2>\\n            <span class=\'checklist-item-list-count right\'>\");\n      stack1 = helpers._triageMustache.call(depth0, \"checklist.listItems.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n          \");\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        \");\n      stack1 = helpers[\'if\'].call(depth0, \"isCurrentUserProfile\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(8, program8, data),fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      \");\n      return buffer;\n      }\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n          No lists yet.\\n         \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"button\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"checklists.new\", options) : helperMissing.call(depth0, \"link-to\", \"checklists.new\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n       \");\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      \n      data.buffer.push(\"Create one\");\n      }\n\n    function program8(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n          Nothing here yet.\\n       \");\n      }\n\n      data.buffer.push(\"<div class=\'content-width\'>\\n  <div class=\'users-show-header media\'>\\n    <img class=\'avatar-medium media-left\' \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'src\': (\"profileImageUrl\")\n      },hashTypes:{\'src\': \"ID\"},hashContexts:{\'src\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'alt\': (\"username\")\n      },hashTypes:{\'alt\': \"ID\"},hashContexts:{\'alt\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\" />\\n\\n    <div class=\'media-body\'>\\n      <h2 class=\'users-show-header-username\'>\\n        \");\n      stack1 = helpers._triageMustache.call(depth0, \"username\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      </h2>\\n      <div class=\'subtitle\'>\\n        \");\n      stack1 = helpers._triageMustache.call(depth0, \"checklists.length\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" Checklists\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\'checklists-container\'>\\n    <ul class=\'checklists list-reset\'>\\n      \");\n      stack1 = helpers.each.call(depth0, \"checklist\", \"in\", \"checklists\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(4, program4, data),fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </ul>\\n  </div>\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=client/templates/users/show.js");

;eval("define(\"client/tests/client/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/adapters\');\n    test(\'client/adapters/application.js should pass jshint\', function() { \n      ok(true, \'client/adapters/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/adapters/application.jshint.js");

;eval("define(\"client/tests/client/adapters/checklist.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/adapters\');\n    test(\'client/adapters/checklist.js should pass jshint\', function() { \n      ok(true, \'client/adapters/checklist.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/adapters/checklist.jshint.js");

;eval("define(\"client/tests/client/adapters/list-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/adapters\');\n    test(\'client/adapters/list-item.js should pass jshint\', function() { \n      ok(true, \'client/adapters/list-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/adapters/list-item.jshint.js");

;eval("define(\"client/tests/client/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client\');\n    test(\'client/app.js should pass jshint\', function() { \n      ok(true, \'client/app.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/app.jshint.js");

;eval("define(\"client/tests/client/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/controllers\');\n    test(\'client/controllers/application.js should pass jshint\', function() { \n      ok(true, \'client/controllers/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/controllers/application.jshint.js");

;eval("define(\"client/tests/client/controllers/checklists/list-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/controllers/checklists\');\n    test(\'client/controllers/checklists/list-item.js should pass jshint\', function() { \n      ok(true, \'client/controllers/checklists/list-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/controllers/checklists/list-item.jshint.js");

;eval("define(\"client/tests/client/controllers/checklists/list-items.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/controllers/checklists\');\n    test(\'client/controllers/checklists/list-items.js should pass jshint\', function() { \n      ok(true, \'client/controllers/checklists/list-items.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/controllers/checklists/list-items.jshint.js");

;eval("define(\"client/tests/client/controllers/checklists/new.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/controllers/checklists\');\n    test(\'client/controllers/checklists/new.js should pass jshint\', function() { \n      ok(true, \'client/controllers/checklists/new.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/controllers/checklists/new.jshint.js");

;eval("define(\"client/tests/client/controllers/checklists/show.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/controllers/checklists\');\n    test(\'client/controllers/checklists/show.js should pass jshint\', function() { \n      ok(true, \'client/controllers/checklists/show.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/controllers/checklists/show.jshint.js");

;eval("define(\"client/tests/client/controllers/foyer.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/controllers\');\n    test(\'client/controllers/foyer.js should pass jshint\', function() { \n      ok(true, \'client/controllers/foyer.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/controllers/foyer.jshint.js");

;eval("define(\"client/tests/client/controllers/header.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/controllers\');\n    test(\'client/controllers/header.js should pass jshint\', function() { \n      ok(true, \'client/controllers/header.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/controllers/header.jshint.js");

;eval("define(\"client/tests/client/controllers/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/controllers\');\n    test(\'client/controllers/index.js should pass jshint\', function() { \n      ok(true, \'client/controllers/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/controllers/index.jshint.js");

;eval("define(\"client/tests/client/controllers/users/show.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/controllers/users\');\n    test(\'client/controllers/users/show.js should pass jshint\', function() { \n      ok(true, \'client/controllers/users/show.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/controllers/users/show.jshint.js");

;eval("define(\"client/tests/client/helpers/autolink-text.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/helpers\');\n    test(\'client/helpers/autolink-text.js should pass jshint\', function() { \n      ok(true, \'client/helpers/autolink-text.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/helpers/autolink-text.jshint.js");

;eval("define(\"client/tests/client/helpers/markdown-text.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/helpers\');\n    test(\'client/helpers/markdown-text.js should pass jshint\', function() { \n      ok(true, \'client/helpers/markdown-text.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/helpers/markdown-text.jshint.js");

;eval("define(\"client/tests/client/initializers/session.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/initializers\');\n    test(\'client/initializers/session.js should pass jshint\', function() { \n      ok(true, \'client/initializers/session.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/initializers/session.jshint.js");

;eval("define(\"client/tests/client/lib/autolink.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/lib\');\n    test(\'client/lib/autolink.js should pass jshint\', function() { \n      ok(true, \'client/lib/autolink.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/lib/autolink.jshint.js");

;eval("define(\"client/tests/client/lib/markdown.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/lib\');\n    test(\'client/lib/markdown.js should pass jshint\', function() { \n      ok(true, \'client/lib/markdown.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/lib/markdown.jshint.js");

;eval("define(\"client/tests/client/mixins/autofocusable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/mixins\');\n    test(\'client/mixins/autofocusable.js should pass jshint\', function() { \n      ok(true, \'client/mixins/autofocusable.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/mixins/autofocusable.jshint.js");

;eval("define(\"client/tests/client/mixins/editable-field.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/mixins\');\n    test(\'client/mixins/editable-field.js should pass jshint\', function() { \n      ok(true, \'client/mixins/editable-field.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/mixins/editable-field.jshint.js");

;eval("define(\"client/tests/client/mixins/sortable.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/mixins\');\n    test(\'client/mixins/sortable.js should pass jshint\', function() { \n      ok(true, \'client/mixins/sortable.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/mixins/sortable.jshint.js");

;eval("define(\"client/tests/client/models/checklist.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/models\');\n    test(\'client/models/checklist.js should pass jshint\', function() { \n      ok(true, \'client/models/checklist.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/models/checklist.jshint.js");

;eval("define(\"client/tests/client/models/list_item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/models\');\n    test(\'client/models/list_item.js should pass jshint\', function() { \n      ok(true, \'client/models/list_item.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/models/list_item.jshint.js");

;eval("define(\"client/tests/client/models/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/models\');\n    test(\'client/models/user.js should pass jshint\', function() { \n      ok(true, \'client/models/user.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/models/user.jshint.js");

;eval("define(\"client/tests/client/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client\');\n    test(\'client/router.js should pass jshint\', function() { \n      ok(true, \'client/router.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/router.jshint.js");

;eval("define(\"client/tests/client/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/routes\');\n    test(\'client/routes/application.js should pass jshint\', function() { \n      ok(true, \'client/routes/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/routes/application.jshint.js");

;eval("define(\"client/tests/client/routes/checklists/show.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/routes/checklists\');\n    test(\'client/routes/checklists/show.js should pass jshint\', function() { \n      ok(true, \'client/routes/checklists/show.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/routes/checklists/show.jshint.js");

;eval("define(\"client/tests/client/routes/checklists_new.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/routes\');\n    test(\'client/routes/checklists_new.js should pass jshint\', function() { \n      ok(true, \'client/routes/checklists_new.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/routes/checklists_new.jshint.js");

;eval("define(\"client/tests/client/routes/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/routes\');\n    test(\'client/routes/index.js should pass jshint\', function() { \n      ok(false, \'client/routes/index.js should pass jshint.\\nclient/routes/index.js: line 5, col 39, Bad or unnecessary escaping.\\n\\n1 error\'); \n    });\n  });//# sourceURL=client/tests/client/routes/index.jshint.js");

;eval("define(\"client/tests/client/routes/signout.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/routes\');\n    test(\'client/routes/signout.js should pass jshint\', function() { \n      ok(true, \'client/routes/signout.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/routes/signout.jshint.js");

;eval("define(\"client/tests/client/routes/users/show.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/routes/users\');\n    test(\'client/routes/users/show.js should pass jshint\', function() { \n      ok(true, \'client/routes/users/show.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/routes/users/show.jshint.js");

;eval("define(\"client/tests/client/serializers/checklist.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/serializers\');\n    test(\'client/serializers/checklist.js should pass jshint\', function() { \n      ok(true, \'client/serializers/checklist.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/serializers/checklist.jshint.js");

;eval("define(\"client/tests/client/services/session.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/services\');\n    test(\'client/services/session.js should pass jshint\', function() { \n      ok(true, \'client/services/session.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/services/session.jshint.js");

;eval("define(\"client/tests/client/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/helpers\');\n    test(\'client/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'client/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/helpers/resolver.jshint.js");

;eval("define(\"client/tests/client/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/helpers\');\n    test(\'client/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'client/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/helpers/start-app.jshint.js");

;eval("define(\"client/tests/client/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests\');\n    test(\'client/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'client/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/test-helper.jshint.js");

;eval("define(\"client/tests/client/tests/unit/mixins/autofocusable-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/mixins\');\n    test(\'client/tests/unit/mixins/autofocusable-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/mixins/autofocusable-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/mixins/autofocusable-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/mixins/editable-field-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/mixins\');\n    test(\'client/tests/unit/mixins/editable-field-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/mixins/editable-field-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/mixins/editable-field-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/mixins/sortable-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/mixins\');\n    test(\'client/tests/unit/mixins/sortable-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/mixins/sortable-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/mixins/sortable-test.jshint.js");

;eval("define(\"client/tests/client/tests/unit/serializers/checklist-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/tests/unit/serializers\');\n    test(\'client/tests/unit/serializers/checklist-test.js should pass jshint\', function() { \n      ok(true, \'client/tests/unit/serializers/checklist-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/tests/unit/serializers/checklist-test.jshint.js");

;eval("define(\"client/tests/client/views/checklists/description.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/views/checklists\');\n    test(\'client/views/checklists/description.js should pass jshint\', function() { \n      ok(true, \'client/views/checklists/description.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/views/checklists/description.jshint.js");

;eval("define(\"client/tests/client/views/checklists/header.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/views/checklists\');\n    test(\'client/views/checklists/header.js should pass jshint\', function() { \n      ok(true, \'client/views/checklists/header.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/views/checklists/header.jshint.js");

;eval("define(\"client/tests/client/views/checklists/list-item.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/views/checklists\');\n    test(\'client/views/checklists/list-item.js should pass jshint\', function() { \n      ok(true, \'client/views/checklists/list-item.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/views/checklists/list-item.jshint.js");

;eval("define(\"client/tests/client/views/checklists/list-items.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/views/checklists\');\n    test(\'client/views/checklists/list-items.js should pass jshint\', function() { \n      ok(true, \'client/views/checklists/list-items.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/views/checklists/list-items.jshint.js");

;eval("define(\"client/tests/client/views/checklists/new.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/views/checklists\');\n    test(\'client/views/checklists/new.js should pass jshint\', function() { \n      ok(true, \'client/views/checklists/new.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/views/checklists/new.jshint.js");

;eval("define(\"client/tests/client/views/checklists/show.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/views/checklists\');\n    test(\'client/views/checklists/show.js should pass jshint\', function() { \n      ok(true, \'client/views/checklists/show.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/views/checklists/show.jshint.js");

;eval("define(\"client/tests/client/views/header.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/views\');\n    test(\'client/views/header.js should pass jshint\', function() { \n      ok(true, \'client/views/header.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/views/header.jshint.js");

;eval("define(\"client/tests/client/views/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/views\');\n    test(\'client/views/index.js should pass jshint\', function() { \n      ok(true, \'client/views/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/views/index.jshint.js");

;eval("define(\"client/tests/client/views/text_field.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/views\');\n    test(\'client/views/text_field.js should pass jshint\', function() { \n      ok(true, \'client/views/text_field.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/views/text_field.jshint.js");

;eval("define(\"client/tests/client/views/textarea.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/views\');\n    test(\'client/views/textarea.js should pass jshint\', function() { \n      ok(true, \'client/views/textarea.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/views/textarea.jshint.js");

;eval("define(\"client/tests/client/views/users/show.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - client/views/users\');\n    test(\'client/views/users/show.js should pass jshint\', function() { \n      ok(true, \'client/views/users/show.js should pass jshint.\'); \n    });\n  });//# sourceURL=client/tests/client/views/users/show.jshint.js");

;eval("define(\"client/tests/helpers/resolver\", \n  [\"ember/resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: \'client\'\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=client/tests/helpers/resolver.js");

;eval("define(\"client/tests/helpers/start-app\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    /* global require */\n\n    var Application = require(\'client/app\')[\'default\'];\n    var Router = require(\'client/router\')[\'default\'];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({\n        // useful Test defaults\n        rootElement: \'#ember-testing\',\n        LOG_ACTIVE_GENERATION:false,\n        LOG_VIEW_LOOKUPS: false\n      }, attrs); // but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function(){\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=client/tests/helpers/start-app.js");

;eval("define(\"client/tests/test-helper\", \n  [\"client/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n  });//# sourceURL=client/tests/test-helper.js");

;eval("define(\"client/tests/unit/mixins/autofocusable-test\", \n  [\"ember\",\"client/mixins/autofocusable\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var AutofocusableMixin = __dependency2__[\"default\"];\n\n    module(\'AutofocusableMixin\');\n\n    // Replace this with your real tests.\n    test(\'it works\', function() {\n      var AutofocusableObject = Ember.Object.extend(AutofocusableMixin);\n      var subject = AutofocusableObject.create();\n      ok(subject);\n    });\n  });//# sourceURL=client/tests/unit/mixins/autofocusable-test.js");

;eval("define(\"client/tests/unit/mixins/editable-field-test\", \n  [\"ember\",\"client/mixins/editable-field\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var EditableFieldMixin = __dependency2__[\"default\"];\n\n    module(\'EditableFieldMixin\');\n\n    // Replace this with your real tests.\n    test(\'it works\', function() {\n      var EditableFieldObject = Ember.Object.extend(EditableFieldMixin);\n      var subject = EditableFieldObject.create();\n      ok(subject);\n    });\n  });//# sourceURL=client/tests/unit/mixins/editable-field-test.js");

;eval("define(\"client/tests/unit/mixins/sortable-test\", \n  [\"ember\",\"client/mixins/sortable\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var SortableMixin = __dependency2__[\"default\"];\n\n    module(\'SortableMixin\');\n\n    // Replace this with your real tests.\n    test(\'it works\', function() {\n      var SortableObject = Ember.Object.extend(SortableMixin);\n      var subject = SortableObject.create();\n      ok(subject);\n    });\n  });//# sourceURL=client/tests/unit/mixins/sortable-test.js");

;eval("define(\"client/tests/unit/serializers/checklist-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'serializer:checklist\', \'ChecklistSerializer\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'serializer:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var serializer = this.subject();\n      ok(serializer);\n    });\n  });//# sourceURL=client/tests/unit/serializers/checklist-test.js");

;eval("define(\"client/views/checklists/description\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n      classNames: [\'p\', \'checklist-description\', \'editable-field\']\n\n    , click: function (e) {\n        var isLink = !!e.target.href;\n        if (this.get(\'controller.canEdit\') && !isLink) {\n          this.get(\'parentView\').toggleEditState(\'description\', true);\n        }\n      }\n\n    , actions: {\n        childViewDidFocusOut: function (childView) {\n          this.get(\'parentView\').send(\'childViewDidFocusOut\', childView);\n        }\n      }\n\n    });\n  });//# sourceURL=client/views/checklists/description.js");

;eval("define(\"client/views/checklists/header\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n\n      templateName: \'checklists/checklist-header\'\n\n    , actions: {\n        edit: function (property) {\n          if (this.get(\'controller.canEdit\')) this.toggleEditState(property, true);\n        }\n\n      , childViewDidFocusOut: function (childView) {\n          this.toggleEditState(childView.property, false);\n          this.get(\'controller\').send(\'childViewDidFocusOut\', childView);\n        }\n      }\n\n    , toggleEditState: function (property, isEditing) {\n        this.set(\'controller.isEditing\'+property.capitalize(), isEditing);\n      }\n\n    });\n  });//# sourceURL=client/views/checklists/header.js");

;eval("define(\"client/views/checklists/list-item\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n      templateName: \'checklists/list-item\'\n\n    , tagName: \'li\'\n\n    , controllerBinding: \'content\'\n\n    , classNames: \'checklist-list-item\'\n\n    , id: function () {\n        return this.get(\'content.id\');\n      }.property(\'content\')\n\n    , attributeBindings: [\'id:data-id\']\n\n    , classNameBindings: [\n        \'controller.isActive\'\n      , \'controller.isEditing\'\n      , \'controller.isCompleted\'\n      , \'controller.animateMoveFlash\'\n      ]\n\n    , checkState: function () {\n        if (this.get(\'controller.isNew\')) this.get(\'controller\').send(\'edit\');\n      }.on(\'didInsertElement\')\n\n    , autoFocus: function () {\n        if (!this.get(\'controller.isEditing\')) return;\n        Ember.run.scheduleOnce(\'afterRender\', this, function () {\n          this.$(\'textarea\').focus();\n        });\n      }.observes(\'controller.isEditing\')\n\n    , actions: {\n        \"delete\": function () {\n          if (!window.confirm(\'Are you sure?\')) return;\n          this.$().transition({ opacity: 0 }, 300, function () {\n            this.get(\'controller\').send(\'delete_\');\n          }.bind(this));\n        }\n      }\n\n    });\n  });//# sourceURL=client/views/checklists/list-item.js");

;eval("define(\"client/views/checklists/list-items\", \n  [\"ember\",\"client/mixins/sortable\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Sortable = __dependency2__[\"default\"];\n\n    __exports__[\"default\"] = Ember.CollectionView.extend(Sortable, {\n      tagName: \'ul\'\n\n    , classNames: [\'checklist-list-items-container\', \'content-width\']\n\n    , itemViewClass: \'checklists/list-item\'\n\n    , contentBinding: \'controller\'\n\n    , onSortUpdate: function () {\n        var listItemIds = this.$().sortable(\'toArray\', {attribute: \'data-id\'});\n        this.get(\'controller\').send(\'reorder\', listItemIds);\n      }\n\n    });\n  });//# sourceURL=client/views/checklists/list-items.js");

;eval("define(\"client/views/checklists/new\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n      classNames: \'content-width checklists-show\'\n\n    , classNameBindings: [\n      , \'controller.canEdit\'\n      , \'controller.isLoading\'\n      ]\n\n    });\n  });//# sourceURL=client/views/checklists/new.js");

;eval("define(\"client/views/checklists/show\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n      classNames: [\'checklist-container\']\n\n    , classNameBindings: [\n        \'controller.isEditing\'\n      , \'controller.isInProgress\'\n      , \'controller.canEdit\'\n      ]\n\n    , autoFocus: function () {\n        var c = this.get(\'controller\');\n        if (c.get(\'isNew\') && c.get(\'isEditing\')) this.$(\'.checklist-title input\').focus();\n      }.on(\'didInsertElement\')\n\n    , actions: {\n        childViewDidFocusOut: function () {\n          this.get(\'controller\').send(\'save\');\n        }\n      }\n\n    });\n  });//# sourceURL=client/views/checklists/show.js");

;eval("define(\"client/views/header\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n      templateName: \'header\'\n    });\n  });//# sourceURL=client/views/header.js");

;eval("define(\"client/views/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n    });\n  });//# sourceURL=client/views/index.js");

;eval("define(\"client/views/text_field\", \n  [\"ember\",\"client/mixins/autofocusable\",\"client/mixins/editable-field\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var Autofocusable = __dependency2__[\"default\"];\n    var EditableField = __dependency3__[\"default\"];\n\n    __exports__[\"default\"] = Ember.TextField.extend(Autofocusable, EditableField, {\n    });\n  });//# sourceURL=client/views/text_field.js");

;eval("define(\"client/views/textarea\", \n  [\"ember\",\"client/mixins/autofocusable\",\"client/mixins/editable-field\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Autofocusable = __dependency2__[\"default\"];\n    var EditableField = __dependency3__[\"default\"];\n\n    __exports__[\"default\"] = Ember.TextArea.extend(Autofocusable, EditableField, {\n    });\n  });//# sourceURL=client/views/textarea.js");

;eval("define(\"client/views/users/show\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n    });\n  });//# sourceURL=client/views/users/show.js");
